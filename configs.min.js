export const config={title:"Anomalie-Trainer",task:"Prüfen Sie, ob während der folgenden beiden Datenbank-Transaktionen eine Anomalie aufgetreten ist.",cols:["","T1","T2","A","a1","a2"],ops:{read1:"read({A},{a})",read2:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})",rollb:"rollback"},random:{b:3,read2:3,rollb:3,value:[10,80],summand:[1,9]},buttons:{generate:"Neue Konstellation generieren",yes:"Ja",neither:"",no:"Nein",submit:"Abschicken"},logos:"./resources/img/logos/logos.jpg",topology:[[["T1,read1","T1,read2"],["T1,read2","T1,add_x"],["T1,add_x","T1,write"],["T1,read1","T1,rollb"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"]],{label:"Lost Update",rules:[["T1,read2","T2,write"],["T2,write","T1,write"]]},{label:"Non-Repeatable Read",rules:[["T1,read1","T2,write"],["T2,write","T1,read2"]]},{label:"Dirty Read",rules:[["T1,write","T2,read1"],["T2,read1","T1,rollb"]]}]};export const lost_update_gen={title:'"Lost Update"-Generator',task:'Beim "Lost Update"-Phänomen wird ein Wert, der von einer Transaktion geschrieben wurde von einer anderen Transaktion überschrieben.',ops:{read1:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})"},t_ops:null,random:{b:3,value:[10,80],summand:[1,9]},topology:[[["T1,read1","T1,add_x"],["T1,add_x","T1,write"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"],["T1,read1","T2,write"],["T2,write","T1,write"]]]};export const non_repeatable_read_gen={title:'"Non-Repeatable Read"-Generator',task:'Beim "Non-Repeatable Read"-Phänomen kann eine Transaktion während ihrer Laufzeit von einem Attribut zu unterschiedlichen Zeitpunkten unterschiedliche Werte lesen, da das Attribut während der Transaktion von einer anderen Transaktion verändert wurde.',ops:{read1:"read({A},{a})",read2:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})",rollb:"rollback"},t_ops:[["read1","read2","rollb"],["read1","add_x","write"]],random:{value:[10,80],summand:[1,9]},topology:[[["T2,read1","T2,add_x"],["T2,add_x","T2,write"],["T1,read1","T2,write"],["T2,write","T1,read2"],["T1,read2","T1,rollb"]]]};export const dirty_read_gen={title:'"Dirty Read"-Generator',task:'Beim "Dirty Read"-Phänomen verändert eine Transaktion einen Wert, welcher von einer anderen Transaktion gelesen wird. Die Transaktion, die das Attribut verändert hat, wird allerdings zurückgesetzt und die andere Transaktion, die den veränderten Wert des Attributs gelesen hat, arbeitet auf einen "verschmutzten" Wert.',ops:{read1:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})",rollb:"rollback"},t_ops:[["read1","add_x","write","rollb"],["read1","add_x","write"]],random:{value:[10,80],summand:[1,9]},topology:[[["T1,read1","T1,add_x"],["T1,add_x","T1,write"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"],["T1,write","T2,read1"],["T2,read1","T1,rollb"]]]};export const lost_update_trainer={title:'"Lost Update"-Trainer',task:'Prüfen Sie, ob während der folgenden beiden Datenbank-Transaktionen ein "Lost Update" aufgetreten ist.',cols:["","T1","T2","A","a1","","B","","b2"],ops:{read1:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})"},t_ops:null,random:{b:3,value:[10,80],summand:[1,9]},topology:[[["T1,read1","T1,add_x"],["T1,add_x","T1,write"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"]],{label:"Lost Update",rules:[["T1,read1","T2,write"],["T2,write","T1,write"]]}]};export const non_repeatable_read_trainer={title:'"Non-Repeatable Read"-Trainer',task:'Prüfen Sie, ob während der folgenden beiden Datenbank-Transaktionen ein "Non-Repeatable Read" aufgetreten ist.',ops:{read1:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})",read2:"read({A},{a})"},t_ops:null,random:{b:3,read2:3,rollb:3,value:[10,80],summand:[1,9]},topology:[[["T1,read1","T1,add_x"],["T1,add_x","T1,write"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"],["T1,read1","T1,read2"]],{label:"Non-Repeatable Read",rules:[["T1,read1","T2,write"],["T2,write","T1,read2"]]}]};export const dirty_read_trainer={title:'"Dirty Read"-Trainer',task:'Prüfen Sie, ob während der folgenden beiden Datenbank-Transaktionen ein "Dirty Read" aufgetreten ist.',ops:{read1:"read({A},{a})",add_x:"{a} = {a} + {x}",write:"write({A},{a})",rollb:"rollback"},t_ops:null,random:{b:3,rollb:3,value:[10,80],summand:[1,9]},topology:[[["T1,read1","T1,add_x"],["T1,add_x","T1,write"],["T2,read1","T2,add_x"],["T2,add_x","T2,write"],["T1,read1","T1,rollb"]],{label:"Dirty Read",rules:[["T1,write","T2,read1"],["T2,read1","T1,rollb"]]}]};
//# sourceMappingURL=configs.min.js.map